// Communications Module Enums
enum MessageStatus {
  DRAFT
  PENDING_APPROVAL
  SCHEDULED
  SENDING
  SENT
  DELIVERED // For SMS
  FAILED
  CANCELLED
}

enum NotificationType {
  INFO
  WARNING
  SUCCESS
  ERROR
  EVENT_REMINDER
}

// Communications Module Models
model EmailTemplate {
  id          String    @id @default(uuid())
  name        String
  description String?
  subject     String
  bodyHtml    String
  bodyText    String?
  isActive    Boolean   @default(true)
  branchId    String?
  branch      Branch?   @relation(fields: [branchId], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  emails      EmailMessage[]

  @@index([branchId])
}

model EmailMessage {
  id          String    @id @default(uuid())
  subject     String
  bodyHtml    String
  bodyText    String?
  senderEmail String
  recipients  String[]  // Array of email addresses
  sentAt      DateTime?
  status      MessageStatus
  branchId    String?
  branch      Branch?   @relation(fields: [branchId], references: [id])
  templateId  String?
  template    EmailTemplate? @relation(fields: [templateId], references: [id])
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@index([branchId])
  @@index([templateId])
}

model SmsMessage {
  id            String    @id @default(uuid())
  body          String
  senderNumber  String
  recipients    String[]  // Array of phone numbers
  sentAt        DateTime?
  status        MessageStatus
  branchId      String?
  branch        Branch?   @relation(fields: [branchId], references: [id])
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  @@index([branchId])
}

model Notification {
  id          String    @id @default(uuid())
  userId      String
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  title       String
  message     String
  isRead      Boolean   @default(false)
  readAt      DateTime?
  link        String?   // Link to relevant page in the app
  type        NotificationType
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@index([userId])
}

// Update Branch model to include communications relations
// model Branch {
//   // existing fields...
//   emailTemplates  EmailTemplate[]
//   emailMessages   EmailMessage[]
//   smsMessages     SmsMessage[]
// }

// Update User model to include notifications relation
// model User {
//   // existing fields...
//   notifications   Notification[]
// }
